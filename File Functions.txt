file handling functions in C:

1. **File Opening and Closing:**
   - `FILE *fopen(const char *filename, const char *mode)`: Opens a file with the specified mode (read, write, append, etc.).
   - `int fclose(FILE *stream)`: Closes the specified file.

2. **Character Input/Output:**
   - `int fgetc(FILE *stream)`: Reads a character from the file.
   - `int fputc(int c, FILE *stream)`: Writes a character to the file.

3. **Line Input/Output:**
   - `char *fgets(char *str, int n, FILE *stream)`: Reads a line from the file.
   - `int fputs(const char *str, FILE *stream)`: Writes a string to the file.

4. **Formatted Input/Output:**
   - `int fscanf(FILE *stream, const char *format, ...)`: Reads data from the file using a format specifier.
   - `int fprintf(FILE *stream, const char *format, ...)`: Writes formatted data to the file.

5. **Binary Input/Output:**
   - `size_t fread(void *ptr, size_t size, size_t count, FILE *stream)`: Reads binary data from the file.
   - `size_t fwrite(const void *ptr, size_t size, size_t count, FILE *stream)`: Writes binary data to the file.

6. **File Pointer Manipulation:**
   - `int fseek(FILE *stream, long offset, int origin)`: Sets the file pointer's position.
   - `long ftell(FILE *stream)`: Returns the current position of the file pointer.
   - `void rewind(FILE *stream)`: Resets the file pointer to the beginning of the file.

7. **End-of-File and Error Handling:**
   - `int feof(FILE *stream)`: Checks if the end of the file has been reached.
   - `int ferror(FILE *stream)`: Checks if an error has occurred during file operations.

8. **File Deletion and Renaming:**
   - `int remove(const char *filename)`: Deletes a file.
   - `int rename(const char *oldname, const char *newname)`: Renames a file.

9. **Temporary Files:**
   - `FILE *tmpfile(void)`: Creates a temporary file.
   - `char *tmpnam(char *str)`: Generates a temporary filename.

